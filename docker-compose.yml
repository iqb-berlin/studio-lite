x-env-postgres: &env-postgres
  POSTGRES_HOST: db
  POSTGRES_PORT: 5432
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}

services:
  db:
    image: ${REGISTRY_PATH}iqbberlin/studio-lite-db:${TAG}
    restart: always
    environment:
      <<: *env-postgres
    volumes:
      - db_vol:/var/lib/postgresql/data
    healthcheck:
      test: "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
      interval: "1s"
      retries: 60
    networks:
      - backend-network

  liquibase:
    image: ${REGISTRY_PATH}iqbberlin/studio-lite-liquibase:${TAG}
    depends_on:
      db:
        condition: service_healthy
    environment:
      <<: *env-postgres
      DB_USER: ${POSTGRES_DB_USER}
      DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
    command: ["liquibase", "--url=jdbc:postgresql://db:5432/$POSTGRES_DB",  "--username=$POSTGRES_USER", "--password=$POSTGRES_PASSWORD", "--classpath=changelog", "--changeLogFile=studio-lite.changelog-root.xml", "update", "-Ddb.user=${POSTGRES_DB_USER}", "-Ddb.password=${POSTGRES_DB_PASSWORD}"]
    networks:
      - backend-network

  backend:
    image: ${REGISTRY_PATH}iqbberlin/studio-lite-backend:${TAG}
    depends_on:
      db:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
    restart: always
    environment:
      <<: *env-postgres
    networks:
      - backend-network

  frontend:
    image: ${REGISTRY_PATH}iqbberlin/studio-lite-frontend:${TAG}
    depends_on:
      db:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
      backend:
        condition: service_started
    restart: always
    networks:
      - backend-network
      - frontend-network

volumes:
  db_vol:

networks:
  backend-network:
  frontend-network:
