{
  "version": 1,
  "projects": {
    "api": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/node:webpack",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": ["apps/api/src/assets"],
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/api/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/api"],
          "options": {
            "jestConfig": "apps/api/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "compodoc": {
          "builder": "@twittwer/compodoc:compodoc",
          "options": {
            "tsConfig": "apps/api/tsconfig.app.json",
            "outputPath": "dist/compodoc/api"
          },
          "configurations": {
            "json": {
              "exportFormat": "json"
            }
          }
        },
        "docker-build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "docker login {args.registry}",
                "forwardAllArgs": false
              },
              "docker build -f apps/api/Dockerfile --build-arg project=api --target=prod -t {args.registry}{args.registryProject}iqbberlin/studio-lite-backend:{args.tag} .",
              "docker push {args.registry}{args.registryProject}iqbberlin/studio-lite-backend:{args.tag}"
            ],
            "parallel": false
          }
        },
        "docker-scan": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "docker pull {args.registry}{args.registryProject}iqbberlin/studio-lite-backend:{args.tag}",
              "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:0.29.2 image --exit-code 1 --security-checks vuln --ignore-unfixed --severity CRITICAL {args.registry}{args.registryProject}iqbberlin/studio-lite-backend:{args.tag}"
            ]
          }
        }
      },
      "tags": []
    },
    "api-admin": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/api-admin",
      "sourceRoot": "libs/api-admin/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/api-admin/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api-admin"],
          "options": {
            "jestConfig": "libs/api-admin/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "api-auth": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/api-auth",
      "sourceRoot": "libs/api-auth/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/api-auth/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api-auth"],
          "options": {
            "jestConfig": "libs/api-auth/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "api-authoring": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/api-authoring",
      "sourceRoot": "libs/api-authoring/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/api-authoring/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api-authoring"],
          "options": {
            "jestConfig": "libs/api-authoring/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "frontend": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "projectType": "application",
      "root": "apps/frontend",
      "sourceRoot": "apps/frontend/src",
      "prefix": "studio-lite",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/frontend",
            "index": "apps/frontend/src/index.html",
            "main": "apps/frontend/src/main.ts",
            "polyfills": "apps/frontend/src/polyfills.ts",
            "tsConfig": "apps/frontend/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/frontend/src/assets"],
            "styles": [
              "./node_modules/@angular/material/prebuilt-themes/purple-green.css",
              "apps/frontend/src/styles.scss",
              "apps/frontend/src/iqb-theme3.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "2mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "100kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/frontend/src/environments/environment.ts",
                  "with": "apps/frontend/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "frontend:build:production"
            },
            "development": {
              "browserTarget": "frontend:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "frontend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/frontend/src/**/*.ts",
              "apps/frontend/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/frontend"],
          "options": {
            "jestConfig": "apps/frontend/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "compodoc": {
          "builder": "@twittwer/compodoc:compodoc",
          "options": {
            "tsConfig": "apps/frontend/tsconfig.editor.json",
            "outputPath": "dist/compodoc/frontend"
          },
          "configurations": {
            "json": {
              "exportFormat": "json"
            }
          }
        },
        "docker-build": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              {
                "command": "docker login {args.registry}",
                "forwardAllArgs": false
              },
              "docker build -f apps/frontend/Dockerfile --build-arg project=frontend --target=prod -t {args.registry}{args.registryProject}iqbberlin/studio-lite-frontend:{args.tag} .",
              "docker push {args.registry}{args.registryProject}iqbberlin/studio-lite-frontend:{args.tag}"
            ],
            "parallel": false
          }
        },
        "docker-scan": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "docker pull {args.registry}{args.registryProject}iqbberlin/studio-lite-frontend:{args.tag}",
              "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:0.29.2 image --exit-code 1 --security-checks vuln --ignore-unfixed --severity CRITICAL {args.registry}{args.registryProject}iqbberlin/studio-lite-frontend:{args.tag}"
            ]
          }
        }
      },
      "tags": []
    },
    "frontend-e2e": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "apps/frontend-e2e",
      "sourceRoot": "apps/frontend-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/frontend-e2e/cypress.json",
            "devServerTarget": "frontend:serve:development"
          },
          "configurations": {
            "production": {
              "devServerTarget": "frontend:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/frontend-e2e/**/*.{js,ts}"]
          }
        }
      },
      "tags": [],
      "implicitDependencies": ["frontend"]
    },
    "iqb-components": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "projectType": "library",
      "root": "libs/iqb-components",
      "sourceRoot": "libs/iqb-components/src",
      "prefix": "studio-lite",
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/iqb-components"],
          "options": {
            "jestConfig": "libs/iqb-components/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/iqb-components/src/**/*.ts",
              "libs/iqb-components/src/**/*.html"
            ]
          }
        }
      },
      "tags": []
    },
    "shared-code": {
      "$schema": "../../node_modules/nx/schemas/project-schema.json",
      "root": "libs/shared-code",
      "sourceRoot": "libs/shared-code/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/shared-code/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared-code"],
          "options": {
            "jestConfig": "libs/shared-code/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "studio-components": {
      "projectType": "library",
      "root": "libs/studio-components",
      "sourceRoot": "libs/studio-components/src",
      "prefix": "studio-lite",
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/studio-components"],
          "options": {
            "jestConfig": "libs/studio-components/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/studio-components/**/*.ts",
              "libs/studio-components/**/*.html"
            ]
          }
        }
      },
      "tags": []
    }
  }
}
