services:
  traefik:
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.traefik.address=:8080"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-ui.entrypoints=web, traefik"
      - "traefik.http.routers.traefik-ui.rule=Host(`traefik.monitoring.${SERVER_NAME}`)"
      - "traefik.http.routers.traefik-ui.service=api@internal"
    ports:
      - "${TRAEFIK_PORT}:8080"  # dashboard

  prometheus:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=web, traefik"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.monitoring.${SERVER_NAME}`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=app-net"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'

  grafana:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=web, traefik"
      - "traefik.http.routers.grafana.rule=Host(`grafana.monitoring.${SERVER_NAME}`)"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=app-net"

  db:
    build:
      context: .
      dockerfile: database/Postgres.Dockerfile
    ports:
      - "${POSTGRES_PORT}:5432"

  liquibase:
    build:
      context: .
      dockerfile: database/Liquibase.Dockerfile
      target: base
    volumes:
      - ./database/changelog:/liquibase/changelog
      - ./database/changelogDocs:/liquibase/changelogDocs

  backend:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.rule=HostRegexp(`{[a-z]*}.${SERVER_NAME}`) || Host(`${SERVER_NAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=3333"
      - "traefik.docker.network=app-net"
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: dev
      args:
        project: api
    ports:
      - "${API_PORT}:3333"  # api
      - "9229:9229"         # default debug port
    volumes:
      - ./apps/api/src:/studio-lite/apps/api/src
      - backend_vol:/studio-lite/packages
    command:
      - "serve"
      - "api"
      - "--host=backend"

  frontend:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.rule=HostRegexp(`{[a-z]*}.${SERVER_NAME}`) || Host(`${SERVER_NAME}`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.docker.network=app-net"
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
      target: dev
      args:
        project: frontend
    volumes:
      - ./apps/frontend/src:/studio-lite/apps/frontend/src
    command:
      - "serve"
      - "frontend"
      - "--host=frontend"
      - "--port=80"
