# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

stages:
  - ".pre"
  - build
  - test
  - test-db
  - test-units
  - test-e2e
  - lint
  - audit
  - scan-dependencies
  - build-images
  - scan-images

image: ${DOCKER_HUB_PROXY}${BASE_IMAGE}

variables:
  REGISTRY: "$CI_REGISTRY"
  REGISTRY_USER: "$CI_REGISTRY_USER"
  REGISTRY_PASSWORD: "$CI_REGISTRY_PASSWORD"
  REGISTRY_PROJECT: "/${CI_PROJECT_PATH}/"
  DOCKER_HUB_PROXY: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/"
  BASE_IMAGE: node:20.12-bookworm-slim
  CICD_BASE_IMAGE: "${BASE_IMAGE}-git"
  CYPRESS_IMAGE: cypress/browsers:node-20.12.0-chrome-123.0.6312.86-1-ff-124.0.2-edge-123.0.2420.65-1
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  E2E_BASE_IMAGE: "${CYPRESS_IMAGE}-docker"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DAEMON_OPTIONS: "--mtu=${DOCKER_SERVICE_MTU}"
  DOCKER_IMAGE: ${DOCKER_HUB_PROXY}docker:26.0
  DOCKER_SERVICE: ${DOCKER_HUB_PROXY}docker:26.0-dind
  DOCKER_SERVICE_MTU: 1442
  DOCKER_TLS_CERTDIR: ''
  TRIVY_IMAGE: ${DOCKER_HUB_PROXY}aquasec/trivy:0.50.1

include:
  - local: ".gitlab-ci/*.gitlab-ci.yml"
  - template: Security/Dependency-Scanning.gitlab-ci.yml

check-config:
  stage: ".pre"
  interruptible: true
  allow_failure: true
  rules:
    - if: "$CI_PIPELINE_SOURCE == 'external_pull_request_event'"
    - if: "$CI_COMMIT_BRANCH"
    - if: "$CI_COMMIT_TAG"
  script:
    - echo $CI_PIPELINE_SOURCE
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_DEPENDENCY_PROXY_SERVER
    - echo $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX
    - echo $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX
    - echo $CI_PROJECT_PATH
    - echo $CI_DEFAULT_BRANCH
    - echo $CI_COMMIT_BRANCH
    - echo $CI_COMMIT_TAG
    - echo $CI_COMMIT_BEFORE_SHA
    - echo $CI_COMMIT_SHA
    - echo $CI_COMMIT_SHORT_SHA
    - echo $CI_COMMIT_REF_NAME
    - echo $CI_COMMIT_REF_SLUG
    - echo $CI_COMMIT_REF_PROTECTED
    - echo $CI_EXTERNAL_PULL_REQUEST_IID
    - echo $CI_EXTERNAL_PULL_REQUEST_SOURCE_REPOSITORY
    - echo $CI_EXTERNAL_PULL_REQUEST_TARGET_REPOSITORY
    - echo $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME
    - echo $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_SHA
    - echo $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME
    - echo $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_SHA
    - echo $CI_MERGE_REQUEST_IID
    - echo $CI_MERGE_REQUEST_LABELS
    - echo $CI_MERGE_REQUEST_EVENT_TYPE
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_SHA
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_SHA
